ev = {
"Clockwerk":3.98554655563967,
"Omniknight":3.86646510219531,
"Night Stalker":3.93113353520061,
"Tiny":3.84616669190008,
"Tusk":3.24611854655564,
"Bane":3.72690355791067,
"Razor":3.40407539742619,
"Bounty Hunter":3.2971980317941,
"Shadow Shaman":3.16914912944739,
"Brewmaster":3.29478425435276,
"Shadow Fiend":3.43275685087055,
"Lycan":3.54930537471612,
"Batrider":3.20773338380015,
"Sand King":2.67677713853142,
"Tinker":3.0085659348978,
"Queen of Pain":2.6797659348978,
"Nyx Assassin":3.09282013626041,
"Tidehunter":3.21216987130961,
"Puck":3.01597577592733,
"Elder Titan":3.42749053747161,
"Disruptor":3.22654322482968,
"Phantom Lancer":2.96200439061317,
"Death Prophet":2.70212687358062,
"Medusa":2.78362785768357,
"Dragon Knight":3.03749235427706,
"Earth Spirit":2.63877259651779,
"Faceless Void":2.88454383043149,
"Doom":2.70153868281605,
"Ancient Apparition":2.47316608629826,
"Outworld Devourer":2.94475685087055,
"Enchantress":2.37659409538229,
"Witch Doctor":2.4081295987888,
"Gyrocopter":2.26849825889478,
"Chaos Knight":2.52647872823618,
"Terrorblade":2.97805722937169,
"Rubick":2.3549295987888,
"Luna":2.55311521574565,
"Juggernaut":2.46299924299773,
"Legion Commander":1.92455170325511,
"Beastmaster":2.43052566237699,
"Broodmother":2.63216669190008,
"Lifestealer":2.05403118849357,
"Weaver":2.37815170325511,
"Viper":2.58446767600303,
"Storm Spirit":1.73047221801665,
"Winter Wyvern":2.05649704769114,
"Abaddon":2.60700060560182,
"Sven":1.58754912944739
}

costs = {
"Anti-Mage":10.6,
"Axe":6.9,
"Bane":22.2,
"Bloodseeker":6.6,
"Crystal Maiden":5.1,
"Drow Ranger":6.3,
"Earthshaker":11.7,
"Juggernaut":8.5,
"Mirana":6.1,
"Morphling":9.1,
"Shadow Fiend":13.8,
"Phantom Lancer":15.6,
"Puck":10.3,
"Pudge":4.4,
"Razor":17.4,
"Sand King":10.8,
"Storm Spirit":13.5,
"Sven":4.4,
"Tiny":25,
"Vengeful Spirit":9,
"Windranger":4.4,
"Zeus":8.1,
"Kunkka":9.1,
"Lina":4.4,
"Lion":4.4,
"Shadow Shaman":9.7,
"Slardar":4.4,
"Tidehunter":17.1,
"Witch Doctor":12.3,
"Lich":4.7,
"Riki":5.4,
"Enigma":4.8,
"Tinker":14.1,
"Sniper":5.7,
"Necrophos":4.4,
"Warlock":6.8,
"Beastmaster":14.7,
"Queen of Pain":20.6,
"Venomancer":6.8,
"Faceless Void":13.7,
"Wraith King":6.8,
"Death Prophet":19.4,
"Phantom Assassin":5,
"Pugna":6.9,
"Templar Assassin":6,
"Viper":12,
"Luna":21.9,
"Dragon Knight":23.8,
"Dazzle":8.9,
"Clockwerk":15.9,
"Leshrac":4.4,
"Natures Prophet":6.6,
"Lifestealer":7.8,
"Dark Seer":5.7,
"Clinkz":5.4,
"Omniknight":17.1,
"Enchantress":13.2,
"Huskar":7.7,
"Night Stalker":19.1,
"Broodmother":8.5,
"Bounty Hunter":10.4,
"Weaver":13.3,
"Jakiro":4.7,
"Batrider":22.3,
"Chen":5.3,
"Spectre":6.6,
"Ancient Apparition":16.2,
"Doom":16.1,
"Ursa":5.7,
"Spirit Breaker":4.4,
"Gyrocopter":9.6,
"Alchemist":6,
"Invoker":8.7,
"Silencer":6,
"Outworld Devourer":18.4,
"Lycan":17,
"Brewmaster":17.6,
"Shadow Demon":10.3,
"Lone Druid":7.5,
"Chaos Knight":13.5,
"Meepo":6.5,
"Treant Protector":9.8,
"Ogre Magi":7.1,
"Undying":6.6,
"Rubick":10.1,
"Disruptor":18.3,
"Nyx Assassin":10.7,
"Naga Siren":6.6,
"Keeper of the Light":7.7,
"Io":5.4,
"Visage":5.9,
"Slark":7.2,
"Medusa":25,
"Troll Warlord":6.3,
"Centaur Warrunner":7.2,
"Magnus":7.4,
"Timbersaw":5.7,
"Bristleback":5.1,
"Tusk":17.1,
"Skywrath Mage":5.9,
"Abaddon":10.8,
"Elder Titan":18.2,
"Legion Commander":13,
"Techies":10,
"Ember Spirit":7.5,
"Earth Spirit":7.3,
"Underlord":9.6,
"Terrorblade":8.2,
"Phoenix":4.8,
"Oracle":6.4,
"Winter Wyvern":6.9,
"Arc Warden":7.1,
"Monkey King":7.1,
"Dark Willow":10,
"Pangolier":10
}


class Hero:
    def __init__(self, name, cost, ev):
        self.cost = cost
        self.name = name
        self.ev = ev

heroes = [Hero(name, costs[name], ev) for name, ev in ev.iteritems()]

bs = 0
best = None

import itertools
togo = len(heroes) * (len(heroes) - 1) * (len(heroes) - 2) * (len(heroes) - 3) * (len(heroes) - 4)

print "{} heroes, {} permutations to go".format(len(heroes), togo)
perc = int(togo / 10)

i = 0
for p in itertools.permutations(heroes, r=5):
    i += 1
    if (i % perc == 0): print "%"
    cost = sum([h.cost for h in p])
    if cost <= 50.0:
        ev = sum([h.ev for h in p])
        if ev > bs:
            bs = ev
            best = (", ".join([h.name for h in p])) + " (" + str(ev) + " / " + str(cost) + ")"
            print best
            

